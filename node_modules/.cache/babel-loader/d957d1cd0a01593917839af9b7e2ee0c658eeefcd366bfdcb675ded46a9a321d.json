{"ast":null,"code":"var _jsxFileName = \"/home/prog/TT_it-Delta/src/components/imagesList/ImagesList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport style from \"./imagesList.module.css\";\nimport PhotoModal from \"../photoModal/PhotoModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ImagesList = ({\n  photos\n}) => {\n  _s();\n  const [fullPhotoData, setFullPhotoData] = useState([]);\n  const [isOpenPopup, setIsOpenPopup] = useState(false);\n  const openPopup = async e => {\n    setIsOpenPopup(!isOpenPopup);\n    const response = await fetch(\"http://test-backend.itdelta.agency/api/image/:\" + e.currentTarget.id).then(data => data.json());\n    if (!response.length) {\n      console.log(e.target.src);\n      response = {\n        photo: e.target.src\n      };\n    }\n    console.log(response);\n    setFullPhotoData(response);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.images_list,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.images_list__content,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: style.images_list__photos,\n          children: photos ? photos.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: style.images_list__item,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                id: item.id,\n                onClick: openPopup,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: item.image,\n                  alt: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 21\n                }, this)\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\\"Loading...\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this), isOpenPopup && /*#__PURE__*/_jsxDEV(PhotoModal, {\n      fullPhotoData: fullPhotoData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n};\n_s(ImagesList, \"1HbU5IsEhZRHiO2ZuwIYWxdK1hc=\");\n_c = ImagesList;\nexport default ImagesList;\nvar _c;\n$RefreshReg$(_c, \"ImagesList\");","map":{"version":3,"names":["React","useEffect","useState","style","PhotoModal","jsxDEV","_jsxDEV","Fragment","_Fragment","ImagesList","photos","_s","fullPhotoData","setFullPhotoData","isOpenPopup","setIsOpenPopup","openPopup","e","response","fetch","currentTarget","id","then","data","json","length","console","log","target","src","photo","children","className","images_list","images_list__content","images_list__photos","map","item","images_list__item","onClick","image","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/prog/TT_it-Delta/src/components/imagesList/ImagesList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport style from \"./imagesList.module.css\";\nimport PhotoModal from \"../photoModal/PhotoModal\";\n\nconst ImagesList = ({ photos }) => {\n  const [fullPhotoData, setFullPhotoData] = useState([])\n  const [isOpenPopup, setIsOpenPopup] = useState(false)\n\n  const openPopup = async (e) => {\n    setIsOpenPopup(!isOpenPopup);\n    const response = await fetch(\n      \"http://test-backend.itdelta.agency/api/image/:\" + e.currentTarget.id\n    ).then((data) => data.json())\n    \n\n    if(!response.length) {\n      console.log(e.target.src)\n      response = {photo: e.target.src}\n    }\n    console.log(response)\n    setFullPhotoData(response)\n  }\n  return (<>\n    <div className={style.images_list}>\n      <div className={style.images_list__content}>\n        <ul className={style.images_list__photos}>\n          {photos ? photos.map((item) => {\n              return (\n                <li className={style.images_list__item}>\n                  <button id={item.id} onClick={openPopup} key={item.id}>\n                    <img src={item.image} alt={item.name}/>\n                  </button>\n                </li>\n              );\n            }) : <div>\"Loading...\"</div>\n          }\n        </ul>\n      </div>\n    </div>\n    {isOpenPopup && <PhotoModal fullPhotoData={fullPhotoData}/>}\n  </>\n    \n  );\n};\n\nexport default ImagesList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}